@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Rendering
@using ParsaPoolad.Application.Services.BackEnd.Admin.Roles.Queries
@using ParsaPoolad.Domain.Entities.Identity
@model ResultGetEditRolesDto
@inject RoleManager<Role> _roleManager
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "ویرایش نقش";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Head{
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/vendors/css/vendors-rtl.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/bootstrap-extended.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/colors.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/components.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/themes/dark-layout.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/themes/semi-dark-layout.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/custom-rtl.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/core/menu/menu-types/vertical-menu-karaji.min.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/style.css">
    <link rel="stylesheet" type="text/css" href="~/BackEnd/Admin/css/colors.min.css">
}

@section Foo{
    <script src="~/BackEnd/Admin/vendors/js/vendors.min.js"></script>
    <script src="~/BackEnd/Admin/js/scripts/configs/vertical-menu-dark.min.js"></script>
    <script src="~/BackEnd/Admin/js/core/app-menu.min.js"></script>
    <script src="~/BackEnd/Admin/js/core/app.min.js"></script>
    <script src="~/BackEnd/Admin/js/scripts/components.min.js"></script>
    <script src="~/BackEnd/Admin/js/scripts/footer.min.js"></script>
    <script src="~/BackEnd/Admin/js/scripts/customizer.min.js"></script>
    <script>$('div.alert').delay(3000).slideUp(300); </script>
}

<div class="app-content content">
    <div class="content-overlay"></div>
    <div class="content-wrapper">
        <div class="content-body">

            <!-- Colored Checkbox start -->
            <form asp-area="Admin"
                  asp-controller="Roles"
                  asp-action="Edit"
                  asp-route-id="@Model.Role.Id"
                  method="post"
                  enctype="multipart/form-data">


                <section id="checkbox-color">
                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title">تعیین سطح دسترسی برای نقش "@Model.Role.Description"</h4>
                                </div>
                                <div class="card-content">
                                    <div class="card-body">
                                        @* <p></p> *@
                                        @* @foreach (var item in Model.Claims) *@
                                        @for (int i = 0; i < Model.Claims.Count; i++)
                                        {
                                            <ul class="list-unstyled mb-0">
                                                <li class="d-inline-block mr-2 mb-1">
                                                    <fieldset>
                                                        @if (Model.Claims[i].IsHead == true)
                                                        {
                                                            <div class="form-check">
                                                                @{
                                                                    var currentRole = _roleManager.FindByIdAsync(Model.Role.Id).Result;
                                                                    var claimsRole = _roleManager.GetClaimsAsync(currentRole).Result;
                                                                }
                                                                @if (claimsRole.Where(c => c.Value == Model.Claims[i].ClaimValue) != null)
                                                                {
                                                                    @Html.CheckBoxFor(dto => dto.Claims[i].IsSelect, new {@checked = "checked"})
                                                                    <label>@Model.Claims[i].ClaimName</label>
                                                                    @Html.HiddenFor(dto => dto.Claims[i].Id)
                                                                }
                                                                else
                                                                {
                                                                    @Html.CheckBoxFor(dto => dto.Claims[i].IsSelect)
                                                                    <label>@Model.Claims[i].ClaimName</label>
                                                                    @Html.HiddenFor(dto => dto.Claims[i].Id)
                                                                }
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="form-check" style="padding-right: 2.25rem !important;">
                                                                @{
                                                                    var currentRole = _roleManager.FindByIdAsync(Model.Role.Id).Result;
                                                                    var claimsRole = _roleManager.GetClaimsAsync(currentRole).Result;
                                                                }
                                                                @if (claimsRole.Where(c => c.Value == Model.Claims[i].ClaimValue) != null)
                                                                {
                                                                    @Html.CheckBoxFor(dto => dto.Claims[i].IsSelect, new {@checked = "checked"})
                                                                    <label>@Model.Claims[i].ClaimName</label>
                                                                    @Html.HiddenFor(dto => dto.Claims[i].Id)
                                                                }
                                                                else
                                                                {
                                                                    @Html.CheckBoxFor(dto => dto.Claims[i].IsSelect)
                                                                    <label>@Model.Claims[i].ClaimName</label>
                                                                    @Html.HiddenFor(dto => dto.Claims[i].Id)
                                                                }
                                                            </div>
                                                        }
                                                    </fieldset>
                                                </li>
                                            </ul>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- Colored Checkbox end -->
                <button class="btn btn-primary btn-block subtotal-preview-btn">ثبت</button>
            </form>

        </div>
    </div>
</div>